import requests
import pandas as pd
import geopandas as gpd
import os
from geofence import getZips
from download_shapeData import SHAPES_PATH

def ZBPCall(zipcodeList=None,NAICS_lvl=None,query=None,base_url = 'https://api.census.gov/data/2017/zbp',quietly=True):
	'''
	Wrapper to call the census API to get data from the Zip Code Business Patterns.

	Parameters
	----------
	zipcodeList : list
		List of zipcodes. Each zip needs to be a 5-digit code string.
		If not provided it will retrieve all zip codes (may be slow)
	NAICS_lvl : int
		NAICS level at which to filter. If not provided it will not get the data by NAICS.
		If zero is provided, it will return the unfiltered table.
	query : dict (optional)
		If provided, it will override the query generated by the given parameters.
	'''
	if NAICS_lvl is not None:
		if NAICS_lvl not in range(2,7):
			raise NameError('NAICS level not supported')
	if query is None:
		query = {'get':'ESTAB,EMP,GEO_ID'}
		if NAICS_lvl is None:
			query['NAICS2017'] = '00'
		else:
			query['NAICS2017'] = '*'
		if zipcodeList is None:
			query['for'] = 'zipcode:*'
		else:
			query['for'] = 'zipcode:{}'.format(','.join(zipcodeList))
	else:
		NAICS_lvl = None

	if not quietly:
		print(query)
	r = requests.get(base_url,params=query)
	df = pd.DataFrame(r.json()[1:],columns=r.json()[0])
	if NAICS_lvl is not None:
		if NAICS_lvl!=0:
			df = df[df['NAICS2017'].astype(str).str.len()==NAICS_lvl]
	return df

def main():
	'''
	Usage example
	'''
	bounds = gpd.read_file(os.path.join(SHAPES_PATH,'bounds','Kendall_bounds.shp')).to_crs({'init':"EPSG:4326"})['geometry'].values[0]
	zipcodeList = getZips(bounds=bounds,quietly=False)
	df = ZBPCall(zipcodeList=zipcodeList,quietly=False)
	print(df)

if __name__ == '__main__':
	main()